<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projets on Pupin Mathéo</title>
    <link>http://www.example.com/projets/</link>
    <description>Recent content in Projets on Pupin Mathéo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Fri, 13 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://www.example.com/projets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Créer un serveur NTP sous Linux</title>
      <link>http://www.example.com/projets/projet6/</link>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet6/</guid>
      <description>Installer un serveur NTP
Sur une machine Debian 10 installer un serveur NTPLink to headingInstaller le package chronyLink to headingsudo -s apt install chrony A partir de ce moment la on doit vérifier le contenu de &amp;ldquo;chrony.conf&amp;rdquo;Link to headingnano /etc/chrony/chrony.conf Ensuite nous devons déclarer nos pool NTP donc nous allons nous rendre à la ligne 3 pour faire ajouter ces modification :Link to headingpool 2.</description>
    </item>
    
    <item>
      <title>Créer un serveur téléphonique sur Linux</title>
      <link>http://www.example.com/projets/projet5/</link>
      <pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet5/</guid>
      <description>Installer le paquetLink to headingapt install asterisk
Configuration de base extensions.confLink to heading[general] static = yes writeprotect = yes clearglobalvars = yes Configuration de base users.confLink to heading[general] hasvoicemail = yes hassip = yes [template] type = friend host = dynamic dtmfmode = rfc2833 isallow = all allow = ulaw allow = alaw Configuration de base voicemail.confLink to heading[general] maxmsg = 100 maxsecs = 0 minsecs = 0 maxlogins = 3 review = no saycid = no Aller plus loin !</description>
    </item>
    
    <item>
      <title>Créer un serveur DHCP sous Linux</title>
      <link>http://www.example.com/projets/projet4/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet4/</guid>
      <description>Installer le paquetLink to headingapt install isc-dhcp-server
Ouvrir le fichier de configurationLink to headingnano /etc/dhcp/dhcpd.conf
Ajout de l&amp;rsquo;attributaionLink to headingsubnet 172.16.0.0 netmask 255.255.0.0 {
rang d&amp;rsquo;attribution (100 machines)Link to headingrange 172.16.100.101 172.16.100.200;
masque de sous-réseauLink to headingoption subnet-mask 255.255.0.0;
broadcast pour les informations généralesLink to headingoption broadcast-address 172.16.100.255;
adresse ip du routeurLink to headingoption routers 172.</description>
    </item>
    
    <item>
      <title>Installer wordpress sur une machine Linux</title>
      <link>http://www.example.com/projets/projet3/</link>
      <pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet3/</guid>
      <description>1ere étape: instalation de WordPress.Link to headingMettez à jour votre machine:
apt-get update &amp;amp;&amp;amp; apt-get upgrade Positionnez-vous dans le dossier &amp;ldquo;/tmp&amp;rdquo; et téléchargez la dernière version de WordPress :
cd /tmp wget https://wordpress.org/latest.zip 2ieme étape: création de la base de donnéeLink to heading*Dans ce tuto, j&amp;rsquo;utilise MariaDB, mais vous pouvez aussi le faire avec MySQL, les commandes sont les mêmes.
Connectez-vous à la console de MariaDB:</description>
    </item>
    
    <item>
      <title>Créer un DNS sous Linux avec BIND9</title>
      <link>http://www.example.com/projets/projet1/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet1/</guid>
      <description>Créer et configurer un serveur DNS sur Linux avec Bind9.
-Installer Bind9 :
sudo apt-get install bind9 Tout d’abord, nous mettons ces 3 lignes dans le fichier named.conf .
include &amp;#34;/etc/bind/named.conf.options&amp;#34;; include &amp;#34;/etc/bind/named.conf.local&amp;#34;; include &amp;#34;/etc/bind/named.conf.default-zones&amp;#34;; -Dans le fichier de configuration de bind9 « named.conf.local », déclarer ces zones :
zone &amp;#34;example.com&amp;#34; { type master; file &amp;#34;/etc/bind/db.example.com&amp;#34;; }; → On vient ici de dire que la configuration de notre zone example.com se fera dans le fichier « db.</description>
    </item>
    
    <item>
      <title>HAProxy</title>
      <link>http://www.example.com/projets/projet2/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/projets/projet2/</guid>
      <description>Ici, le HAProxy sera la porte d&amp;rsquo;entrée pour le reséau public vers le réseau privée (les 2 serveurs webs)
Chacun des 2 serveurs auront une page différentes
Le HAProxy disposera d&amp;rsquo;un équilibrage de charge entre les deux serveurs webs
Ainsi qu&amp;rsquo;une connexion en HTTPS grâce à un certificat qui nous appartient
Nous allons configurer le fichier &amp;ldquo;/etc/haproxy/haproxy.cfg&amp;rdquo; et mettre cette configuration :
frontend http-in bind 172.25.40.2:80 --&amp;gt; déclarer l&amp;#39;IP sur laquelle le HAProxy va écouter, c&amp;#39;est-a-dire, définir la porte d&amp;#39;entrée mode http option httplog acl pupin1 hdr(host) www.</description>
    </item>
    
  </channel>
</rss>
